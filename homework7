import java.time.LocalDate;
import java.time.Period;
import java.util.Scanner;

public class SliceHeaven {

    private static final long BLACKLISTED_NUMBER = 12345678901234L;

    public void takeOrder() {
        Scanner scanner = new Scanner(System.in);

        int[] ingChoices = new int[3];
        String[] ingredients = new String[3];
        String[] ingredientOptions = {"Mushroom", "Paprika", "Sun-dried tomatoes", "Chicken", "Pineapple"};

        System.out.println("Please pick any three of the following ingredients:");
        for (int i = 0; i < ingredientOptions.length; i++) {
            System.out.println((i + 1) + ". " + ingredientOptions[i]);
        }
        System.out.println("Enter any three choices (1, 2, 3,…) separated by spaces:");

        while (true) {
            try {
                ingChoices[0] = scanner.nextInt();
                ingChoices[1] = scanner.nextInt();
                ingChoices[2] = scanner.nextInt();

                boolean valid = true;
                for (int choice : ingChoices) {
                    if (choice < 1 || choice > ingredientOptions.length) {
                        valid = false;
                        break;
                    }
                }
                if (valid) {
                    break;
                } else {
                    System.out.println("Invalid choice(s). Please pick only from the given list:");
                }
            } catch (Exception e) {
                System.out.println("Invalid input. Please enter numbers only.");
                scanner.next();
            }
        }

        for (int i = 0; i < ingChoices.length; i++) {
            ingredients[i] = ingredientOptions[ingChoices[i] - 1];
        }

        System.out.println("\nWhat size should your pizza be?");
        System.out.println("1. Large\n2. Medium\n3. Small");
        System.out.println("Enter only one choice (1, 2, or 3):");

        int sizeChoice = 0;
        while (true) {
            try {
                sizeChoice = scanner.nextInt();
                if (sizeChoice >= 1 && sizeChoice <= 3) {
                    break;
                } else {
                    System.out.println("Invalid choice. Please enter a number between 1 and 3:");
                }
            } catch (Exception e) {
                System.out.println("Invalid input. Please enter a number.");
                scanner.next();
            }
        }
        String pizzaSize = switch (sizeChoice) {
            case 1 -> "Large";
            case 2 -> "Medium";
            case 3 -> "Small";
            default -> "";
        };

        System.out.println("\nDo you want extra cheese (Y/N):");
        String extraCheese = "";
        while (true) {
            extraCheese = scanner.next().toUpperCase();
            if (extraCheese.equals("Y") || extraCheese.equals("N")) {
                break;
            } else {
                System.out.println("Invalid choice. Please enter Y or N:");
            }
        }

        System.out.println("\nFollowing are the side dishes that go well with your pizza:");
        System.out.println("1. Calzone\n2. Garlic bread\n3. Chicken puff\n4. Muffin\n5. Nothing for me");
        System.out.println("What would you like? Pick one (1, 2, 3,…):");

        int sideDishChoice = 0;
        while (true) {
            try {
                sideDishChoice = scanner.nextInt();
                if (sideDishChoice >= 1 && sideDishChoice <= 5) {
                    break;
                } else {
                    System.out.println("Invalid choice. Please enter a number between 1 and 5:");
                }
            } catch (Exception e) {
                System.out.println("Invalid input. Please enter a number.");
                scanner.next();
            }
        }
        String sideDish = switch (sideDishChoice) {
            case 1 -> "Calzone";
            case 2 -> "Garlic bread";
            case 3 -> "Chicken puff";
            case 4 -> "Muffin";
            case 5 -> "None";
            default -> "";
        };

        System.out.println("\nChoose from one of the drinks below. We recommend Coca Cola:");
        System.out.println("1. Coca Cola\n2. Cold coffee\n3. Cocoa Drink\n4. No drinks for me");
        System.out.println("Enter your choice:");

        int drinkChoice = 0;
        while (true) {
            try {
                drinkChoice = scanner.nextInt();
                if (drinkChoice >= 1 && drinkChoice <= 4) {
                    break;
                } else {
                    System.out.println("Invalid choice. Please enter a number between 1 and 4:");
                }
            } catch (Exception e) {
                System.out.println("Invalid input. Please enter a number.");
                scanner.next();
            }
        }
        String drinks = switch (drinkChoice) {
            case 1 -> "Coca Cola";
            case 2 -> "Cold coffee";
            case 3 -> "Cocoa Drink";
            case 4 -> "None";
            default -> "";
        };

        System.out.println("\nWould you like the chance to pay only half for your order? (Y/N):");
        String wantDiscount = "";
        while (true) {
            wantDiscount = scanner.next().toUpperCase();
            if (wantDiscount.equals("Y") || wantDiscount.equals("N")) {
                break;
            } else {
                System.out.println("Invalid choice. Please enter Y or N:");
            }
        }

        if (wantDiscount.equals("Y")) {
            isItYourBirthday();
        } else {
            makeCardPayment();
        }
    }

    public void isItYourBirthday() {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("Enter your birthdate (YYYY-MM-DD):");
            String birthdate = scanner.next();
            LocalDate birthDate;
            try {
                birthDate = LocalDate.parse(birthdate);
            } catch (Exception e) {
                System.out.println("Invalid date format. Please enter a valid date:");
                continue;
            }

            if (Period.between(birthDate, LocalDate.now()).getYears() < 5 ||
                Period.between(birthDate, LocalDate.now()).getYears() > 120) {
                System.out.println("Invalid date. You are either too young or too dead to order.");
                System.out.println("Please enter a valid date:");
            } else {
                if (Period.between(birthDate, LocalDate.now()).getYears() < 18 &&
                    birthDate.getMonth() == LocalDate.now().getMonth() &&
                    birthDate.getDayOfMonth() == LocalDate.now().getDayOfMonth()) {
                    System.out.println("Congratulations! You pay only half the price for your order.");
                } else {
                    System.out.println("Too bad! You do not meet the conditions to get our 50% discount.");
                }
                break;
            }
        }
    }

    public void makeCardPayment() {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Enter your card number:");
            long cardNumber = scanner.nextLong();

            System.out.println("Enter your card's expiry date (MM/YY):");
            String expiryDate = scanner.next();

            if (!isValidExpiryDate(expiryDate)) {
                System.out.println("Invalid expiry date. Please enter a future date.");
                continue;
            }

            System.out.println("Enter your card's CVV number:");
            int cvv = scanner.nextInt();

            if (processCardPayment(cardNumber, expiryDate, cvv)) {
                break;
            }
        }
    }

    public boolean processCardPayment(long cardNumber, String expiryDate, int cvv) {
        String cardNumberStr = Long.toString(cardNumber);

        if (cardNumberStr.length() != 14) {
            System.out.println("Invalid card number. Please enter a 14-digit card number.");
            return false;
        }

        if (cardNumber == BLACKLISTED_NUMBER) {
            System.out.println("Card is blacklisted. Please use another card.");
            return false;
        }

        System.out.println("Card accepted");
        return true;
    }

    public boolean isValidExpiryDate(String expiryDate) {
        try {
            int month = Integer.parseInt(expiryDate.substring(0, 2));
            int year = Integer.parseInt(expiryDate.substring(3, 5)) + 2000;

            if (year < LocalDate.now().getYear() || 
                (year == LocalDate.now().getYear() && month < LocalDate.now().getMonthValue())) {
                return false;
            }
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    @Override
    public String toString() {
        return "----- Receipt -----\n" +
               "Ingredients: Mushroom, Paprika, Chicken\n" +
               "Pizza Size: Medium\n" +
               "Extra Cheese: Y\n" +
               "Side Dish: Garlic bread\n" +
               "Drinks: Coca Cola\n" +
               "-------------------";
    }

    public static void main(String[] args) {
        SliceHeaven sliceHeaven = new SliceHeaven();
        System.out.println("Welcome to Slice-o-Heaven!");
        sliceHeaven.takeOrder();

        System.out.println("\nDisplaying Special of
